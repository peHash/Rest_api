{
  "name": "angular-moment",
  "version": "0.10.2",
  "main": "angular-moment.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/urish/angular-moment.git"
  },
  "dependencies": {
    "moment": ">=2.8.0 <2.11.0"
  },
  "devDependencies": {
    "bower": "^1.3.12",
    "coveralls": "~2.11.0",
    "grunt": "~0.4.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-jshint": "~0.11.0",
    "grunt-contrib-uglify": "0.8.1",
    "grunt-karma": "~0.10.1",
    "grunt-ngdocs": "^0.2.7",
    "jasmine-core": "2.2.0",
    "karma": "~0.12.0",
    "karma-coverage": "~0.2.0",
    "karma-jasmine": "~0.3.5",
    "karma-phantomjs-launcher": "~0.1.1",
    "load-grunt-tasks": "3.1.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "bower": "bower install",
    "test": "grunt test",
    "build": "grunt build"
  },
  "readme": "angular-moment\n==============\n\nAngularJS directive and filters for [Moment.JS](http://www.momentjs.com).\n\nCopyright (C) 2013, 2014, 2015, Uri Shaked <uri@urish.org>\n\n[![Build Status](https://travis-ci.org/urish/angular-moment.png?branch=master)](https://travis-ci.org/urish/angular-moment)\n[![Coverage Status](https://coveralls.io/repos/urish/angular-moment/badge.png)](https://coveralls.io/r/urish/angular-moment)\n\nInstallation\n------------\n\nYou can choose your preferred method of installation:\n* Through bower: `bower install angular-moment --save`\n* Through npm: `npm install angular-moment --save`\n* Through NuGet: `Install-Package angular-moment`\n* From a CDN: [jsDelivr](https://cdn.jsdelivr.net/angular.moment/0.10.2/angular-moment.min.js) or [CDNJS](https://cdnjs.cloudflare.com/ajax/libs/angular-moment/0.10.2/angular-moment.min.js)\n* Download from github: [angular-moment.min.js](https://raw.github.com/urish/angular-moment/master/angular-moment.min.js)\n\nUsage\n-----\nInclude both moment.js and angular-moment.js in your application.\n\n```html\n<script src=\"components/moment/moment.js\"></script>\n<script src=\"components/angular-moment/angular-moment.js\"></script>\n```\n\nAdd the module `angularMoment` as a dependency to your app module:\n\n```js\nvar myapp = angular.module('myapp', ['angularMoment']);\n```\n\nIf you need internationalization support, load specified moment.js locale file first:\n\n```html\n<script src=\"components/moment/locale/de.js\"></script>\n```\n\nThen call the `amMoment.changeLocale()` method (e.g. inside your app's run() callback):\n\n```js\nmyapp.run(function(amMoment) {\n\tamMoment.changeLocale('de');\n});\n```\n\n### Configuration\n\nParameter `preprocess`(e.g: `unix`, `utc`) would pre-execute before.\n\n```js\nangular.module('myapp').constant('angularMomentConfig', {\n\tpreprocess: 'unix', // optional\n\ttimezone: 'Europe/London' // optional\n});\n```\n\n### Timeago directive\nUse am-time-ago directive to format your relative timestamps. For example:\n\n```html\n<span am-time-ago=\"message.time\"></span>\n<span am-time-ago=\"message.time\" am-preprocess=\"unix\"></span>\n```\n\nangular-moment will dynamically update the span to indicate how much time\npassed since the message was created. So, if your controller contains the following\ncode:\n```js\n$scope.message = {\n   text: 'hello world!',\n   time: new Date()\n};\n```\n\nThe user will initially see \"a few seconds ago\", and about a minute\nafter the span will automatically update with the text \"a minute ago\",\netc.\n\n### amDateFormat filter\nFormat dates using moment.js format() method. Example:\n\n```html\n<span>{{message.time | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}}</span>\n```\n\nThis snippet will format the given time as \"Monday, October 7th 2013, 12:36:29 am\".\n\nFor more information about Moment.JS formatting options, see the\n[docs for the format() function](http://momentjs.com/docs/#/displaying/format/).\n\n### amCalendar filter\n\nFormat dates using moment.js calendar() method. Example:\n\n```html\n<span>{{message.time | amCalendar}}</span>\n```\n\nThis snippet will format the given time as e.g. \"Today 2:30 AM\" or \"Last Monday 2:30 AM\" etc..\n\nFor more information about Moment.JS calendar time format, see the\n[docs for the calendar() function](http://momentjs.com/docs/#/displaying/calendar-time/).\n\n### amDifference filter\n\nGet the difference between two dates in milliseconds.\nParameters are date, units and usePrecision. Date defaults to current date. Example:\n\n```html\n<span>Scheduled {{message.createdAt | amDifference : null : 'days' }} days from now</span>\n```\n\nThis snippet will return the number of days between the current date and the date filtered.\n\nFor more information about Moment.JS difference function, see the\n[docs for the diff() function](http://momentjs.com/docs/#/displaying/difference/).\n\n### Time zone support\n\nThe `amDateFormat` and `amCalendar` filters can be configured to display dates aligned\nto a specific timezone. You can configure the timezone using the following syntax:\n\n```js\nangular.module('myapp').constant('angularMomentConfig', {\n    timezone: 'Name of Timezone' // e.g. 'Europe/London'\n});\n```\n\nRemember to include `moment-timezone.js` in your project, otherwise the custom timezone\nfunctionality will not be available. You will also need to include a timezone data file that\nyou can create using the [Timezone Data Builder](http://momentjs.com/timezone/data/)\nor simply download from [here](https://rawgithub.com/qw4n7y/7282780/raw/6ae3b334b295f93047e8f3ad300db6bc4387e235/moment-timezone-data.js).\n\nLicense\n----\n\nReleased under the terms of the [MIT License](LICENSE).\n",
  "readmeFilename": "README.md",
  "description": "angular-moment ==============",
  "bugs": {
    "url": "https://github.com/urish/angular-moment/issues"
  },
  "homepage": "https://github.com/urish/angular-moment",
  "_id": "angular-moment@0.10.2",
  "_from": "angular-moment@^0.10.1"
}
